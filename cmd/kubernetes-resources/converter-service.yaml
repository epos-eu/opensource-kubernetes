#    EPOS Open Source - Local installation with Kubernetes
#    Copyright (C) 2023  EPOS ERIC
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.
kind: Deployment
apiVersion: apps/v1
metadata:
  name: converter-deployment 
spec:
  replicas: 1 # maybe more, no problem should happen with software heart 
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: epos-converter
      version: ${DEPLOY_TAG}
  template:
    metadata:
      labels:
        app: epos-converter
        version: ${DEPLOY_TAG}
      annotations:
        docker-metadata: DOCKER-METADATA
    spec:
      containers:
      - name: converter-service
        image: ${DOCKER_REGISTRY}/${CONVERTER_IMAGE}
        env:
        - name: BROKER_HOST
          valueFrom:
            secretKeyRef:
              name: systemsecrets
              key: broker_host
        - name: BROKER_USERNAME
          valueFrom:
            secretKeyRef:
              name: systemsecrets
              key: broker_username
        - name: BROKER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: systemsecrets
              key: broker_password
        - name: BROKER_VHOST
          valueFrom:
            secretKeyRef:
              name: systemsecrets
              key: broker_vhost
        - name: REPOTOKEN_DEFAULT
          valueFrom:
            secretKeyRef:
              name: systemsecrets
              key: repotoken_default
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 10m
            memory: 100Mi # have to be more than 50MB
        volumeMounts:
          - name: converter-pvc
            mountPath: /converter
      volumes:
        - name: converter-pvc
          persistentVolumeClaim:
            claimName: converter-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: converter-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
