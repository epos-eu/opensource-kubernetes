#    EPOS Open Source - Local installation with Kubernetes
#    Copyright (C) 2023  EPOS ERIC
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.
kind: Deployment
apiVersion: apps/v1
metadata:
  name: epos-metadatadb
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: epos-metadatadb
      version: ${DEPLOY_TAG}
  template:
    metadata:
      labels:
        app: epos-metadatadb
        version: ${DEPLOY_TAG}
      annotations:
        docker-metadata: DOCKER-METADATA
    spec:
      imagePullSecrets:
      - name: epos-ics-c-tests-docker-registry-secret # this line is important!
      containers:
      - name: metadatacatalogue
        image: ${DOCKER_REGISTRY}/${METADATA_DB_IMAGE}
        imagePullPolicy: Always
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: systemsecrets
              key: postgresql_username
        - name: POSTGRES_PASS
          valueFrom:
            secretKeyRef:
              name: systemsecrets
              key: postgresql_password
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: systemsecrets
              key: postgresql_password
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: systemsecrets
              key: postgresql_dbname
        resources:
          requests:
            cpu: 20m
            memory: 1Gi
        ports:
        - containerPort: 5432
        volumeMounts:
          - name: metadata-db-pvc
            mountPath: /var/lib/postgresql/data
      volumes:
        - name: metadata-db-pvc
          persistentVolumeClaim:
            claimName: metadata-db-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: metadata-db-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
---
kind: Service
apiVersion: v1
metadata:
  name: metadatacatalogue # this name is required for the dbconnector to connect to this db
  labels:
    app: epos-metadatadb
    version: ${DEPLOY_TAG}
spec:
  selector:
    app: epos-metadatadb
    version: ${DEPLOY_TAG}
  ports:
  - protocol: TCP
    port: 5432
